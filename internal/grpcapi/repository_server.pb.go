// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: repository_server.proto

package grpcapi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NotificationEventArgType int32

const (
	NotificationEventArgType_ARG_TYPE_UNKNOWN               NotificationEventArgType = 0 // unknown, not provided by old clients
	NotificationEventArgType_ARG_TYPE_EMPTY                 NotificationEventArgType = 1 //
	NotificationEventArgType_ARG_TYPE_ERROR_INFO            NotificationEventArgType = 2
	NotificationEventArgType_ARG_TYPE_MULTI_SNAPSHOT_STATUS NotificationEventArgType = 3
)

// Enum value maps for NotificationEventArgType.
var (
	NotificationEventArgType_name = map[int32]string{
		0: "ARG_TYPE_UNKNOWN",
		1: "ARG_TYPE_EMPTY",
		2: "ARG_TYPE_ERROR_INFO",
		3: "ARG_TYPE_MULTI_SNAPSHOT_STATUS",
	}
	NotificationEventArgType_value = map[string]int32{
		"ARG_TYPE_UNKNOWN":               0,
		"ARG_TYPE_EMPTY":                 1,
		"ARG_TYPE_ERROR_INFO":            2,
		"ARG_TYPE_MULTI_SNAPSHOT_STATUS": 3,
	}
)

func (x NotificationEventArgType) Enum() *NotificationEventArgType {
	p := new(NotificationEventArgType)
	*p = x
	return p
}

func (x NotificationEventArgType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationEventArgType) Descriptor() protoreflect.EnumDescriptor {
	return file_repository_server_proto_enumTypes[0].Descriptor()
}

func (NotificationEventArgType) Type() protoreflect.EnumType {
	return &file_repository_server_proto_enumTypes[0]
}

func (x NotificationEventArgType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationEventArgType.Descriptor instead.
func (NotificationEventArgType) EnumDescriptor() ([]byte, []int) {
	return file_repository_server_proto_rawDescGZIP(), []int{0}
}

type ErrorResponse_Code int32

const (
	ErrorResponse_UNKNOWN_ERROR      ErrorResponse_Code = 0
	ErrorResponse_CLIENT_ERROR       ErrorResponse_Code = 1
	ErrorResponse_CONTENT_NOT_FOUND  ErrorResponse_Code = 2
	ErrorResponse_MANIFEST_NOT_FOUND ErrorResponse_Code = 3
	ErrorResponse_OBJECT_NOT_FOUND   ErrorResponse_Code = 4
	ErrorResponse_ACCESS_DENIED      ErrorResponse_Code = 5
	ErrorResponse_STREAM_BROKEN      ErrorResponse_Code = 6
)

// Enum value maps for ErrorResponse_Code.
var (
	ErrorResponse_Code_name = map[int32]string{
		0: "UNKNOWN_ERROR",
		1: "CLIENT_ERROR",
		2: "CONTENT_NOT_FOUND",
		3: "MANIFEST_NOT_FOUND",
		4: "OBJECT_NOT_FOUND",
		5: "ACCESS_DENIED",
		6: "STREAM_BROKEN",
	}
	ErrorResponse_Code_value = map[string]int32{
		"UNKNOWN_ERROR":      0,
		"CLIENT_ERROR":       1,
		"CONTENT_NOT_FOUND":  2,
		"MANIFEST_NOT_FOUND": 3,
		"OBJECT_NOT_FOUND":   4,
		"ACCESS_DENIED":      5,
		"STREAM_BROKEN":      6,
	}
)

func (x ErrorResponse_Code) Enum() *ErrorResponse_Code {
	p := new(ErrorResponse_Code)
	*p = x
	return p
}

func (x ErrorResponse_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorResponse_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_repository_server_proto_enumTypes[1].Descriptor()
}

func (ErrorResponse_Code) Type() protoreflect.EnumType {
	return &file_repository_server_proto_enumTypes[1]
}

func (x ErrorResponse_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorResponse_Code.Descriptor instead.
func (ErrorResponse_Code) EnumDescriptor() ([]byte, []int) {
	return file_repository_server_proto_rawDescGZIP(), []int{2, 0}
}

// corresponds to content.Info
type ContentInfo struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PackedLength     uint32                 `protobuf:"varint,2,opt,name=packed_length,json=packedLength,proto3" json:"packed_length,omitempty"`
	TimestampSeconds int64                  `protobuf:"varint,3,opt,name=timestamp_seconds,json=timestampSeconds,proto3" json:"timestamp_seconds,omitempty"`
	PackBlobId       string                 `protobuf:"bytes,4,opt,name=pack_blob_id,json=packBlobId,proto3" json:"pack_blob_id,omitempty"`
	PackOffset       uint32                 `protobuf:"varint,5,opt,name=pack_offset,json=packOffset,proto3" json:"pack_offset,omitempty"`
	Deleted          bool                   `protobuf:"varint,6,opt,name=deleted,proto3" json:"deleted,omitempty"`
	FormatVersion    uint32                 `protobuf:"varint,7,opt,name=format_version,json=formatVersion,proto3" json:"format_version,omitempty"`
	OriginalLength   uint32                 `protobuf:"varint,8,opt,name=original_length,json=originalLength,proto3" json:"original_length,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ContentInfo) Reset() {
	*x = ContentInfo{}
	mi := &file_repository_server_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContentInfo) ProtoMessage() {}

func (x *ContentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_repository_server_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContentInfo.ProtoReflect.Descriptor instead.
func (*ContentInfo) Descriptor() ([]byte, []int) {
	return file_repository_server_proto_rawDescGZIP(), []int{0}
}

func (x *ContentInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ContentInfo) GetPackedLength() uint32 {
	if x != nil {
		return x.PackedLength
	}
	return 0
}

func (x *ContentInfo) GetTimestampSeconds() int64 {
	if x != nil {
		return x.TimestampSeconds
	}
	return 0
}

func (x *ContentInfo) GetPackBlobId() string {
	if x != nil {
		return x.PackBlobId
	}
	return ""
}

func (x *ContentInfo) GetPackOffset() uint32 {
	if x != nil {
		return x.PackOffset
	}
	return 0
}

func (x *ContentInfo) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

func (x *ContentInfo) GetFormatVersion() uint32 {
	if x != nil {
		return x.FormatVersion
	}
	return 0
}

func (x *ContentInfo) GetOriginalLength() uint32 {
	if x != nil {
		return x.OriginalLength
	}
	return 0
}

// corresponds to manifest.EntryMetadata
type ManifestEntryMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ModTimeNanos  int64                  `protobuf:"varint,2,opt,name=mod_time_nanos,json=modTimeNanos,proto3" json:"mod_time_nanos,omitempty"`
	Length        int32                  `protobuf:"varint,3,opt,name=length,proto3" json:"length,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ManifestEntryMetadata) Reset() {
	*x = ManifestEntryMetadata{}
	mi := &file_repository_server_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ManifestEntryMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManifestEntryMetadata) ProtoMessage() {}

func (x *ManifestEntryMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_repository_server_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManifestEntryMetadata.ProtoReflect.Descriptor instead.
func (*ManifestEntryMetadata) Descriptor() ([]byte, []int) {
	return file_repository_server_proto_rawDescGZIP(), []int{1}
}

func (x *ManifestEntryMetadata) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ManifestEntryMetadata) GetModTimeNanos() int64 {
	if x != nil {
		return x.ModTimeNanos
	}
	return 0
}

func (x *ManifestEntryMetadata) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *ManifestEntryMetadata) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

// ErrorResponse can be sent in response to any request.
type ErrorResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          ErrorResponse_Code     `protobuf:"varint,1,opt,name=code,proto3,enum=kopia_repository.ErrorResponse_Code" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorResponse) Reset() {
	*x = ErrorResponse{}
	mi := &file_repository_server_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorResponse) ProtoMessage() {}

func (x *ErrorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_repository_server_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorResponse.ProtoReflect.Descriptor instead.
func (*ErrorResponse) Descriptor() ([]byte, []int) {
	return file_repository_server_proto_rawDescGZIP(), []int{2}
}

func (x *ErrorResponse) GetCode() ErrorResponse_Code {
	if x != nil {
		return x.Code
	}
	return ErrorResponse_UNKNOWN_ERROR
}

func (x *ErrorResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// RepositoryParameters describes repository parameters.
type RepositoryParameters struct {
	state                      protoimpl.MessageState `protogen:"open.v1"`
	HashFunction               string                 `protobuf:"bytes,1,opt,name=hash_function,json=hashFunction,proto3" json:"hash_function,omitempty"`
	HmacSecret                 []byte                 `protobuf:"bytes,2,opt,name=hmac_secret,json=hmacSecret,proto3" json:"hmac_secret,omitempty"`
	Splitter                   string                 `protobuf:"bytes,3,opt,name=splitter,proto3" json:"splitter,omitempty"`
	SupportsContentCompression bool                   `protobuf:"varint,4,opt,name=supports_content_compression,json=supportsContentCompression,proto3" json:"supports_content_compression,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *RepositoryParameters) Reset() {
	*x = RepositoryParameters{}
	mi := &file_repository_server_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RepositoryParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepositoryParameters) ProtoMessage() {}

func (x *RepositoryParameters) ProtoReflect() protoreflect.Message {
	mi := &file_repository_server_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepositoryParameters.ProtoReflect.Descriptor instead.
func (*RepositoryParameters) Descriptor() ([]byte, []int) {
	return file_repository_server_proto_rawDescGZIP(), []int{3}
}

func (x *RepositoryParameters) GetHashFunction() string {
	if x != nil {
		return x.HashFunction
	}
	return ""
}

func (x *RepositoryParameters) GetHmacSecret() []byte {
	if x != nil {
		return x.HmacSecret
	}
	return nil
}

func (x *RepositoryParameters) GetSplitter() string {
	if x != nil {
		return x.Splitter
	}
	return ""
}

func (x *RepositoryParameters) GetSupportsContentCompression() bool {
	if x != nil {
		return x.SupportsContentCompression
	}
	return false
}

// InitializeSessionRequest must be sent by the client as the first request in a session.
type InitializeSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Purpose       string                 `protobuf:"bytes,1,opt,name=purpose,proto3" json:"purpose,omitempty"`
	ReadOnly      bool                   `protobuf:"varint,2,opt,name=read_only,json=readOnly,proto3" json:"read_only,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitializeSessionRequest) Reset() {
	*x = InitializeSessionRequest{}
	mi := &file_repository_server_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitializeSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitializeSessionRequest) ProtoMessage() {}

func (x *InitializeSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_repository_server_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitializeSessionRequest.ProtoReflect.Descriptor instead.
func (*InitializeSessionRequest) Descriptor() ([]byte, []int) {
	return file_repository_server_proto_rawDescGZIP(), []int{4}
}

func (x *InitializeSessionRequest) GetPurpose() string {
	if x != nil {
		return x.Purpose
	}
	return ""
}

func (x *InitializeSessionRequest) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

// InitializeSessionResponse will be sent as the first response by the server.
type InitializeSessionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Parameters    *RepositoryParameters  `protobuf:"bytes,1,opt,name=parameters,proto3" json:"parameters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitializeSessionResponse) Reset() {
	*x = InitializeSessionResponse{}
	mi := &file_repository_server_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitializeSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitializeSessionResponse) ProtoMessage() {}

func (x *InitializeSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_repository_server_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitializeSessionResponse.ProtoReflect.Descriptor instead.
func (*InitializeSessionResponse) Descriptor() ([]byte, []int) {
	return file_repository_server_proto_rawDescGZIP(), []int{5}
}

func (x *InitializeSessionResponse) GetParameters() *RepositoryParameters {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type GetContentInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContentId     string                 `protobuf:"bytes,1,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContentInfoRequest) Reset() {
	*x = GetContentInfoRequest{}
	mi := &file_repository_server_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContentInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContentInfoRequest) ProtoMessage() {}

func (x *GetContentInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_repository_server_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContentInfoRequest.ProtoReflect.Descriptor instead.
func (*GetContentInfoRequest) Descriptor() ([]byte, []int) {
	return file_repository_server_proto_rawDescGZIP(), []int{6}
}

func (x *GetContentInfoRequest) GetContentId() string {
	if x != nil {
		return x.ContentId
	}
	return ""
}

type GetContentInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Info          *ContentInfo           `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContentInfoResponse) Reset() {
	*x = GetContentInfoResponse{}
	mi := &file_repository_server_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContentInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContentInfoResponse) ProtoMessage() {}

func (x *GetContentInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_repository_server_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContentInfoResponse.ProtoReflect.Descriptor instead.
func (*GetContentInfoResponse) Descriptor() ([]byte, []int) {
	return file_repository_server_proto_rawDescGZIP(), []int{7}
}

func (x *GetContentInfoResponse) GetInfo() *ContentInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetContentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContentId     string                 `protobuf:"bytes,1,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContentRequest) Reset() {
	*x = GetContentRequest{}
	mi := &file_repository_server_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContentRequest) ProtoMessage() {}

func (x *GetContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_repository_server_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContentRequest.ProtoReflect.Descriptor instead.
func (*GetContentRequest) Descriptor() ([]byte, []int) {
	return file_repository_server_proto_rawDescGZIP(), []int{8}
}

func (x *GetContentRequest) GetContentId() string {
	if x != nil {
		return x.ContentId
	}
	return ""
}

type GetContentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContentResponse) Reset() {
	*x = GetContentResponse{}
	mi := &file_repository_server_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContentResponse) ProtoMessage() {}

func (x *GetContentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_repository_server_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContentResponse.ProtoReflect.Descriptor instead.
func (*GetContentResponse) Descriptor() ([]byte, []int) {
	return file_repository_server_proto_rawDescGZIP(), []int{9}
}

func (x *GetContentResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type FlushRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FlushRequest) Reset() {
	*x = FlushRequest{}
	mi := &file_repository_server_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlushRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlushRequest) ProtoMessage() {}

func (x *FlushRequest) ProtoReflect() protoreflect.Message {
	mi := &file_repository_server_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlushRequest.ProtoReflect.Descriptor instead.
func (*FlushRequest) Descriptor() ([]byte, []int) {
	return file_repository_server_proto_rawDescGZIP(), []int{10}
}

type FlushResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FlushResponse) Reset() {
	*x = FlushResponse{}
	mi := &file_repository_server_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlushResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlushResponse) ProtoMessage() {}

func (x *FlushResponse) ProtoReflect() protoreflect.Message {
	mi := &file_repository_server_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlushResponse.ProtoReflect.Descriptor instead.
func (*FlushResponse) Descriptor() ([]byte, []int) {
	return file_repository_server_proto_rawDescGZIP(), []int{11}
}

type WriteContentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Prefix        string                 `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Compression   uint32                 `protobuf:"varint,3,opt,name=compression,proto3" json:"compression,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteContentRequest) Reset() {
	*x = WriteContentRequest{}
	mi := &file_repository_server_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteContentRequest) ProtoMessage() {}

func (x *WriteContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_repository_server_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteContentRequest.ProtoReflect.Descriptor instead.
func (*WriteContentRequest) Descriptor() ([]byte, []int) {
	return file_repository_server_proto_rawDescGZIP(), []int{12}
}

func (x *WriteContentRequest) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *WriteContentRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *WriteContentRequest) GetCompression() uint32 {
	if x != nil {
		return x.Compression
	}
	return 0
}

type WriteContentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContentId     string                 `protobuf:"bytes,1,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteContentResponse) Reset() {
	*x = WriteContentResponse{}
	mi := &file_repository_server_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteContentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteContentResponse) ProtoMessage() {}

func (x *WriteContentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_repository_server_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteContentResponse.ProtoReflect.Descriptor instead.
func (*WriteContentResponse) Descriptor() ([]byte, []int) {
	return file_repository_server_proto_rawDescGZIP(), []int{13}
}

func (x *WriteContentResponse) GetContentId() string {
	if x != nil {
		return x.ContentId
	}
	return ""
}

type GetManifestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ManifestId    string                 `protobuf:"bytes,1,opt,name=manifest_id,json=manifestId,proto3" json:"manifest_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetManifestRequest) Reset() {
	*x = GetManifestRequest{}
	mi := &file_repository_server_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetManifestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetManifestRequest) ProtoMessage() {}

func (x *GetManifestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_repository_server_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetManifestRequest.ProtoReflect.Descriptor instead.
func (*GetManifestRequest) Descriptor() ([]byte, []int) {
	return file_repository_server_proto_rawDescGZIP(), []int{14}
}

func (x *GetManifestRequest) GetManifestId() string {
	if x != nil {
		return x.ManifestId
	}
	return ""
}

type GetManifestResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JsonData      []byte                 `protobuf:"bytes,1,opt,name=json_data,json=jsonData,proto3" json:"json_data,omitempty"`
	Metadata      *ManifestEntryMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetManifestResponse) Reset() {
	*x = GetManifestResponse{}
	mi := &file_repository_server_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetManifestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetManifestResponse) ProtoMessage() {}

func (x *GetManifestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_repository_server_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetManifestResponse.ProtoReflect.Descriptor instead.
func (*GetManifestResponse) Descriptor() ([]byte, []int) {
	return file_repository_server_proto_rawDescGZIP(), []int{15}
}

func (x *GetManifestResponse) GetJsonData() []byte {
	if x != nil {
		return x.JsonData
	}
	return nil
}

func (x *GetManifestResponse) GetMetadata() *ManifestEntryMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type PutManifestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JsonData      []byte                 `protobuf:"bytes,1,opt,name=json_data,json=jsonData,proto3" json:"json_data,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PutManifestRequest) Reset() {
	*x = PutManifestRequest{}
	mi := &file_repository_server_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutManifestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutManifestRequest) ProtoMessage() {}

func (x *PutManifestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_repository_server_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutManifestRequest.ProtoReflect.Descriptor instead.
func (*PutManifestRequest) Descriptor() ([]byte, []int) {
	return file_repository_server_proto_rawDescGZIP(), []int{16}
}

func (x *PutManifestRequest) GetJsonData() []byte {
	if x != nil {
		return x.JsonData
	}
	return nil
}

func (x *PutManifestRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type PutManifestResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ManifestId    string                 `protobuf:"bytes,1,opt,name=manifest_id,json=manifestId,proto3" json:"manifest_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PutManifestResponse) Reset() {
	*x = PutManifestResponse{}
	mi := &file_repository_server_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutManifestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutManifestResponse) ProtoMessage() {}

func (x *PutManifestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_repository_server_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutManifestResponse.ProtoReflect.Descriptor instead.
func (*PutManifestResponse) Descriptor() ([]byte, []int) {
	return file_repository_server_proto_rawDescGZIP(), []int{17}
}

func (x *PutManifestResponse) GetManifestId() string {
	if x != nil {
		return x.ManifestId
	}
	return ""
}

type DeleteManifestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ManifestId    string                 `protobuf:"bytes,1,opt,name=manifest_id,json=manifestId,proto3" json:"manifest_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteManifestRequest) Reset() {
	*x = DeleteManifestRequest{}
	mi := &file_repository_server_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteManifestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteManifestRequest) ProtoMessage() {}

func (x *DeleteManifestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_repository_server_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteManifestRequest.ProtoReflect.Descriptor instead.
func (*DeleteManifestRequest) Descriptor() ([]byte, []int) {
	return file_repository_server_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteManifestRequest) GetManifestId() string {
	if x != nil {
		return x.ManifestId
	}
	return ""
}

type DeleteManifestResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteManifestResponse) Reset() {
	*x = DeleteManifestResponse{}
	mi := &file_repository_server_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteManifestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteManifestResponse) ProtoMessage() {}

func (x *DeleteManifestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_repository_server_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteManifestResponse.ProtoReflect.Descriptor instead.
func (*DeleteManifestResponse) Descriptor() ([]byte, []int) {
	return file_repository_server_proto_rawDescGZIP(), []int{19}
}

type FindManifestsRequest struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Labels map[string]string      `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// if set to non-zero, the server will return up to N entries.
	PageSize      int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindManifestsRequest) Reset() {
	*x = FindManifestsRequest{}
	mi := &file_repository_server_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindManifestsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindManifestsRequest) ProtoMessage() {}

func (x *FindManifestsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_repository_server_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindManifestsRequest.ProtoReflect.Descriptor instead.
func (*FindManifestsRequest) Descriptor() ([]byte, []int) {
	return file_repository_server_proto_rawDescGZIP(), []int{20}
}

func (x *FindManifestsRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *FindManifestsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type FindManifestsResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Metadata      []*ManifestEntryMetadata `protobuf:"bytes,1,rep,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindManifestsResponse) Reset() {
	*x = FindManifestsResponse{}
	mi := &file_repository_server_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindManifestsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindManifestsResponse) ProtoMessage() {}

func (x *FindManifestsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_repository_server_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindManifestsResponse.ProtoReflect.Descriptor instead.
func (*FindManifestsResponse) Descriptor() ([]byte, []int) {
	return file_repository_server_proto_rawDescGZIP(), []int{21}
}

func (x *FindManifestsResponse) GetMetadata() []*ManifestEntryMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type PrefetchContentsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContentIds    []string               `protobuf:"bytes,1,rep,name=content_ids,json=contentIds,proto3" json:"content_ids,omitempty"`
	Hint          string                 `protobuf:"bytes,2,opt,name=hint,proto3" json:"hint,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrefetchContentsRequest) Reset() {
	*x = PrefetchContentsRequest{}
	mi := &file_repository_server_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrefetchContentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrefetchContentsRequest) ProtoMessage() {}

func (x *PrefetchContentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_repository_server_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrefetchContentsRequest.ProtoReflect.Descriptor instead.
func (*PrefetchContentsRequest) Descriptor() ([]byte, []int) {
	return file_repository_server_proto_rawDescGZIP(), []int{22}
}

func (x *PrefetchContentsRequest) GetContentIds() []string {
	if x != nil {
		return x.ContentIds
	}
	return nil
}

func (x *PrefetchContentsRequest) GetHint() string {
	if x != nil {
		return x.Hint
	}
	return ""
}

type PrefetchContentsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContentIds    []string               `protobuf:"bytes,1,rep,name=content_ids,json=contentIds,proto3" json:"content_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrefetchContentsResponse) Reset() {
	*x = PrefetchContentsResponse{}
	mi := &file_repository_server_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrefetchContentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrefetchContentsResponse) ProtoMessage() {}

func (x *PrefetchContentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_repository_server_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrefetchContentsResponse.ProtoReflect.Descriptor instead.
func (*PrefetchContentsResponse) Descriptor() ([]byte, []int) {
	return file_repository_server_proto_rawDescGZIP(), []int{23}
}

func (x *PrefetchContentsResponse) GetContentIds() []string {
	if x != nil {
		return x.ContentIds
	}
	return nil
}

type ApplyRetentionPolicyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SourcePath    string                 `protobuf:"bytes,1,opt,name=source_path,json=sourcePath,proto3" json:"source_path,omitempty"`
	ReallyDelete  bool                   `protobuf:"varint,2,opt,name=really_delete,json=reallyDelete,proto3" json:"really_delete,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplyRetentionPolicyRequest) Reset() {
	*x = ApplyRetentionPolicyRequest{}
	mi := &file_repository_server_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplyRetentionPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyRetentionPolicyRequest) ProtoMessage() {}

func (x *ApplyRetentionPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_repository_server_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyRetentionPolicyRequest.ProtoReflect.Descriptor instead.
func (*ApplyRetentionPolicyRequest) Descriptor() ([]byte, []int) {
	return file_repository_server_proto_rawDescGZIP(), []int{24}
}

func (x *ApplyRetentionPolicyRequest) GetSourcePath() string {
	if x != nil {
		return x.SourcePath
	}
	return ""
}

func (x *ApplyRetentionPolicyRequest) GetReallyDelete() bool {
	if x != nil {
		return x.ReallyDelete
	}
	return false
}

type ApplyRetentionPolicyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ManifestIds   []string               `protobuf:"bytes,1,rep,name=manifest_ids,json=manifestIds,proto3" json:"manifest_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplyRetentionPolicyResponse) Reset() {
	*x = ApplyRetentionPolicyResponse{}
	mi := &file_repository_server_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplyRetentionPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyRetentionPolicyResponse) ProtoMessage() {}

func (x *ApplyRetentionPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_repository_server_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyRetentionPolicyResponse.ProtoReflect.Descriptor instead.
func (*ApplyRetentionPolicyResponse) Descriptor() ([]byte, []int) {
	return file_repository_server_proto_rawDescGZIP(), []int{25}
}

func (x *ApplyRetentionPolicyResponse) GetManifestIds() []string {
	if x != nil {
		return x.ManifestIds
	}
	return nil
}

type SendNotificationRequest struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	TemplateName  string                   `protobuf:"bytes,1,opt,name=template_name,json=templateName,proto3" json:"template_name,omitempty"`
	EventArgs     []byte                   `protobuf:"bytes,2,opt,name=event_args,json=eventArgs,proto3" json:"event_args,omitempty"` // JSON-encoded
	Severity      int32                    `protobuf:"varint,3,opt,name=severity,proto3" json:"severity,omitempty"`
	EventArgsType NotificationEventArgType `protobuf:"varint,4,opt,name=event_args_type,json=eventArgsType,proto3,enum=kopia_repository.NotificationEventArgType" json:"event_args_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendNotificationRequest) Reset() {
	*x = SendNotificationRequest{}
	mi := &file_repository_server_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendNotificationRequest) ProtoMessage() {}

func (x *SendNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_repository_server_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendNotificationRequest.ProtoReflect.Descriptor instead.
func (*SendNotificationRequest) Descriptor() ([]byte, []int) {
	return file_repository_server_proto_rawDescGZIP(), []int{26}
}

func (x *SendNotificationRequest) GetTemplateName() string {
	if x != nil {
		return x.TemplateName
	}
	return ""
}

func (x *SendNotificationRequest) GetEventArgs() []byte {
	if x != nil {
		return x.EventArgs
	}
	return nil
}

func (x *SendNotificationRequest) GetSeverity() int32 {
	if x != nil {
		return x.Severity
	}
	return 0
}

func (x *SendNotificationRequest) GetEventArgsType() NotificationEventArgType {
	if x != nil {
		return x.EventArgsType
	}
	return NotificationEventArgType_ARG_TYPE_UNKNOWN
}

type SendNotificationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendNotificationResponse) Reset() {
	*x = SendNotificationResponse{}
	mi := &file_repository_server_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendNotificationResponse) ProtoMessage() {}

func (x *SendNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_repository_server_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendNotificationResponse.ProtoReflect.Descriptor instead.
func (*SendNotificationResponse) Descriptor() ([]byte, []int) {
	return file_repository_server_proto_rawDescGZIP(), []int{27}
}

type SessionRequest struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	RequestId    int64                  `protobuf:"varint,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	TraceContext map[string]string      `protobuf:"bytes,2,rep,name=trace_context,json=traceContext,proto3" json:"trace_context,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// each SessionRequest returns SessionResponse with request_id matching the request
	// and corresponding type specific to each request. In case of an error, ErrorResponse
	// is returned instead.
	//
	// Types that are valid to be assigned to Request:
	//
	//	*SessionRequest_InitializeSession
	//	*SessionRequest_GetContentInfo
	//	*SessionRequest_Flush
	//	*SessionRequest_WriteContent
	//	*SessionRequest_GetContent
	//	*SessionRequest_GetManifest
	//	*SessionRequest_PutManifest
	//	*SessionRequest_FindManifests
	//	*SessionRequest_DeleteManifest
	//	*SessionRequest_PrefetchContents
	//	*SessionRequest_ApplyRetentionPolicy
	//	*SessionRequest_SendNotification
	Request       isSessionRequest_Request `protobuf_oneof:"request"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SessionRequest) Reset() {
	*x = SessionRequest{}
	mi := &file_repository_server_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionRequest) ProtoMessage() {}

func (x *SessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_repository_server_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionRequest.ProtoReflect.Descriptor instead.
func (*SessionRequest) Descriptor() ([]byte, []int) {
	return file_repository_server_proto_rawDescGZIP(), []int{28}
}

func (x *SessionRequest) GetRequestId() int64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *SessionRequest) GetTraceContext() map[string]string {
	if x != nil {
		return x.TraceContext
	}
	return nil
}

func (x *SessionRequest) GetRequest() isSessionRequest_Request {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *SessionRequest) GetInitializeSession() *InitializeSessionRequest {
	if x != nil {
		if x, ok := x.Request.(*SessionRequest_InitializeSession); ok {
			return x.InitializeSession
		}
	}
	return nil
}

func (x *SessionRequest) GetGetContentInfo() *GetContentInfoRequest {
	if x != nil {
		if x, ok := x.Request.(*SessionRequest_GetContentInfo); ok {
			return x.GetContentInfo
		}
	}
	return nil
}

func (x *SessionRequest) GetFlush() *FlushRequest {
	if x != nil {
		if x, ok := x.Request.(*SessionRequest_Flush); ok {
			return x.Flush
		}
	}
	return nil
}

func (x *SessionRequest) GetWriteContent() *WriteContentRequest {
	if x != nil {
		if x, ok := x.Request.(*SessionRequest_WriteContent); ok {
			return x.WriteContent
		}
	}
	return nil
}

func (x *SessionRequest) GetGetContent() *GetContentRequest {
	if x != nil {
		if x, ok := x.Request.(*SessionRequest_GetContent); ok {
			return x.GetContent
		}
	}
	return nil
}

func (x *SessionRequest) GetGetManifest() *GetManifestRequest {
	if x != nil {
		if x, ok := x.Request.(*SessionRequest_GetManifest); ok {
			return x.GetManifest
		}
	}
	return nil
}

func (x *SessionRequest) GetPutManifest() *PutManifestRequest {
	if x != nil {
		if x, ok := x.Request.(*SessionRequest_PutManifest); ok {
			return x.PutManifest
		}
	}
	return nil
}

func (x *SessionRequest) GetFindManifests() *FindManifestsRequest {
	if x != nil {
		if x, ok := x.Request.(*SessionRequest_FindManifests); ok {
			return x.FindManifests
		}
	}
	return nil
}

func (x *SessionRequest) GetDeleteManifest() *DeleteManifestRequest {
	if x != nil {
		if x, ok := x.Request.(*SessionRequest_DeleteManifest); ok {
			return x.DeleteManifest
		}
	}
	return nil
}

func (x *SessionRequest) GetPrefetchContents() *PrefetchContentsRequest {
	if x != nil {
		if x, ok := x.Request.(*SessionRequest_PrefetchContents); ok {
			return x.PrefetchContents
		}
	}
	return nil
}

func (x *SessionRequest) GetApplyRetentionPolicy() *ApplyRetentionPolicyRequest {
	if x != nil {
		if x, ok := x.Request.(*SessionRequest_ApplyRetentionPolicy); ok {
			return x.ApplyRetentionPolicy
		}
	}
	return nil
}

func (x *SessionRequest) GetSendNotification() *SendNotificationRequest {
	if x != nil {
		if x, ok := x.Request.(*SessionRequest_SendNotification); ok {
			return x.SendNotification
		}
	}
	return nil
}

type isSessionRequest_Request interface {
	isSessionRequest_Request()
}

type SessionRequest_InitializeSession struct {
	InitializeSession *InitializeSessionRequest `protobuf:"bytes,10,opt,name=initialize_session,json=initializeSession,proto3,oneof"`
}

type SessionRequest_GetContentInfo struct {
	GetContentInfo *GetContentInfoRequest `protobuf:"bytes,11,opt,name=get_content_info,json=getContentInfo,proto3,oneof"`
}

type SessionRequest_Flush struct {
	Flush *FlushRequest `protobuf:"bytes,12,opt,name=flush,proto3,oneof"`
}

type SessionRequest_WriteContent struct {
	WriteContent *WriteContentRequest `protobuf:"bytes,13,opt,name=write_content,json=writeContent,proto3,oneof"`
}

type SessionRequest_GetContent struct {
	GetContent *GetContentRequest `protobuf:"bytes,14,opt,name=get_content,json=getContent,proto3,oneof"`
}

type SessionRequest_GetManifest struct {
	GetManifest *GetManifestRequest `protobuf:"bytes,15,opt,name=get_manifest,json=getManifest,proto3,oneof"`
}

type SessionRequest_PutManifest struct {
	PutManifest *PutManifestRequest `protobuf:"bytes,16,opt,name=put_manifest,json=putManifest,proto3,oneof"`
}

type SessionRequest_FindManifests struct {
	FindManifests *FindManifestsRequest `protobuf:"bytes,17,opt,name=find_manifests,json=findManifests,proto3,oneof"`
}

type SessionRequest_DeleteManifest struct {
	DeleteManifest *DeleteManifestRequest `protobuf:"bytes,18,opt,name=delete_manifest,json=deleteManifest,proto3,oneof"`
}

type SessionRequest_PrefetchContents struct {
	PrefetchContents *PrefetchContentsRequest `protobuf:"bytes,19,opt,name=prefetch_contents,json=prefetchContents,proto3,oneof"`
}

type SessionRequest_ApplyRetentionPolicy struct {
	ApplyRetentionPolicy *ApplyRetentionPolicyRequest `protobuf:"bytes,20,opt,name=apply_retention_policy,json=applyRetentionPolicy,proto3,oneof"`
}

type SessionRequest_SendNotification struct {
	SendNotification *SendNotificationRequest `protobuf:"bytes,21,opt,name=send_notification,json=sendNotification,proto3,oneof"`
}

func (*SessionRequest_InitializeSession) isSessionRequest_Request() {}

func (*SessionRequest_GetContentInfo) isSessionRequest_Request() {}

func (*SessionRequest_Flush) isSessionRequest_Request() {}

func (*SessionRequest_WriteContent) isSessionRequest_Request() {}

func (*SessionRequest_GetContent) isSessionRequest_Request() {}

func (*SessionRequest_GetManifest) isSessionRequest_Request() {}

func (*SessionRequest_PutManifest) isSessionRequest_Request() {}

func (*SessionRequest_FindManifests) isSessionRequest_Request() {}

func (*SessionRequest_DeleteManifest) isSessionRequest_Request() {}

func (*SessionRequest_PrefetchContents) isSessionRequest_Request() {}

func (*SessionRequest_ApplyRetentionPolicy) isSessionRequest_Request() {}

func (*SessionRequest_SendNotification) isSessionRequest_Request() {}

type SessionResponse struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	RequestId int64                  `protobuf:"varint,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"` // corresponds to request ID
	HasMore   bool                   `protobuf:"varint,3,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`       // if set to true, the client should expect more responses with the same request_id.
	// Types that are valid to be assigned to Response:
	//
	//	*SessionResponse_Error
	//	*SessionResponse_InitializeSession
	//	*SessionResponse_GetContentInfo
	//	*SessionResponse_Flush
	//	*SessionResponse_WriteContent
	//	*SessionResponse_GetContent
	//	*SessionResponse_GetManifest
	//	*SessionResponse_PutManifest
	//	*SessionResponse_FindManifests
	//	*SessionResponse_DeleteManifest
	//	*SessionResponse_PrefetchContents
	//	*SessionResponse_ApplyRetentionPolicy
	//	*SessionResponse_SendNotification
	Response      isSessionResponse_Response `protobuf_oneof:"response"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SessionResponse) Reset() {
	*x = SessionResponse{}
	mi := &file_repository_server_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionResponse) ProtoMessage() {}

func (x *SessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_repository_server_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionResponse.ProtoReflect.Descriptor instead.
func (*SessionResponse) Descriptor() ([]byte, []int) {
	return file_repository_server_proto_rawDescGZIP(), []int{29}
}

func (x *SessionResponse) GetRequestId() int64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *SessionResponse) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *SessionResponse) GetResponse() isSessionResponse_Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *SessionResponse) GetError() *ErrorResponse {
	if x != nil {
		if x, ok := x.Response.(*SessionResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

func (x *SessionResponse) GetInitializeSession() *InitializeSessionResponse {
	if x != nil {
		if x, ok := x.Response.(*SessionResponse_InitializeSession); ok {
			return x.InitializeSession
		}
	}
	return nil
}

func (x *SessionResponse) GetGetContentInfo() *GetContentInfoResponse {
	if x != nil {
		if x, ok := x.Response.(*SessionResponse_GetContentInfo); ok {
			return x.GetContentInfo
		}
	}
	return nil
}

func (x *SessionResponse) GetFlush() *FlushResponse {
	if x != nil {
		if x, ok := x.Response.(*SessionResponse_Flush); ok {
			return x.Flush
		}
	}
	return nil
}

func (x *SessionResponse) GetWriteContent() *WriteContentResponse {
	if x != nil {
		if x, ok := x.Response.(*SessionResponse_WriteContent); ok {
			return x.WriteContent
		}
	}
	return nil
}

func (x *SessionResponse) GetGetContent() *GetContentResponse {
	if x != nil {
		if x, ok := x.Response.(*SessionResponse_GetContent); ok {
			return x.GetContent
		}
	}
	return nil
}

func (x *SessionResponse) GetGetManifest() *GetManifestResponse {
	if x != nil {
		if x, ok := x.Response.(*SessionResponse_GetManifest); ok {
			return x.GetManifest
		}
	}
	return nil
}

func (x *SessionResponse) GetPutManifest() *PutManifestResponse {
	if x != nil {
		if x, ok := x.Response.(*SessionResponse_PutManifest); ok {
			return x.PutManifest
		}
	}
	return nil
}

func (x *SessionResponse) GetFindManifests() *FindManifestsResponse {
	if x != nil {
		if x, ok := x.Response.(*SessionResponse_FindManifests); ok {
			return x.FindManifests
		}
	}
	return nil
}

func (x *SessionResponse) GetDeleteManifest() *DeleteManifestResponse {
	if x != nil {
		if x, ok := x.Response.(*SessionResponse_DeleteManifest); ok {
			return x.DeleteManifest
		}
	}
	return nil
}

func (x *SessionResponse) GetPrefetchContents() *PrefetchContentsResponse {
	if x != nil {
		if x, ok := x.Response.(*SessionResponse_PrefetchContents); ok {
			return x.PrefetchContents
		}
	}
	return nil
}

func (x *SessionResponse) GetApplyRetentionPolicy() *ApplyRetentionPolicyResponse {
	if x != nil {
		if x, ok := x.Response.(*SessionResponse_ApplyRetentionPolicy); ok {
			return x.ApplyRetentionPolicy
		}
	}
	return nil
}

func (x *SessionResponse) GetSendNotification() *SendNotificationResponse {
	if x != nil {
		if x, ok := x.Response.(*SessionResponse_SendNotification); ok {
			return x.SendNotification
		}
	}
	return nil
}

type isSessionResponse_Response interface {
	isSessionResponse_Response()
}

type SessionResponse_Error struct {
	Error *ErrorResponse `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

type SessionResponse_InitializeSession struct {
	InitializeSession *InitializeSessionResponse `protobuf:"bytes,10,opt,name=initialize_session,json=initializeSession,proto3,oneof"`
}

type SessionResponse_GetContentInfo struct {
	GetContentInfo *GetContentInfoResponse `protobuf:"bytes,11,opt,name=get_content_info,json=getContentInfo,proto3,oneof"`
}

type SessionResponse_Flush struct {
	Flush *FlushResponse `protobuf:"bytes,12,opt,name=flush,proto3,oneof"`
}

type SessionResponse_WriteContent struct {
	WriteContent *WriteContentResponse `protobuf:"bytes,13,opt,name=write_content,json=writeContent,proto3,oneof"`
}

type SessionResponse_GetContent struct {
	GetContent *GetContentResponse `protobuf:"bytes,14,opt,name=get_content,json=getContent,proto3,oneof"`
}

type SessionResponse_GetManifest struct {
	GetManifest *GetManifestResponse `protobuf:"bytes,15,opt,name=get_manifest,json=getManifest,proto3,oneof"`
}

type SessionResponse_PutManifest struct {
	PutManifest *PutManifestResponse `protobuf:"bytes,16,opt,name=put_manifest,json=putManifest,proto3,oneof"`
}

type SessionResponse_FindManifests struct {
	FindManifests *FindManifestsResponse `protobuf:"bytes,17,opt,name=find_manifests,json=findManifests,proto3,oneof"`
}

type SessionResponse_DeleteManifest struct {
	DeleteManifest *DeleteManifestResponse `protobuf:"bytes,18,opt,name=delete_manifest,json=deleteManifest,proto3,oneof"`
}

type SessionResponse_PrefetchContents struct {
	PrefetchContents *PrefetchContentsResponse `protobuf:"bytes,19,opt,name=prefetch_contents,json=prefetchContents,proto3,oneof"`
}

type SessionResponse_ApplyRetentionPolicy struct {
	ApplyRetentionPolicy *ApplyRetentionPolicyResponse `protobuf:"bytes,20,opt,name=apply_retention_policy,json=applyRetentionPolicy,proto3,oneof"`
}

type SessionResponse_SendNotification struct {
	SendNotification *SendNotificationResponse `protobuf:"bytes,21,opt,name=send_notification,json=sendNotification,proto3,oneof"`
}

func (*SessionResponse_Error) isSessionResponse_Response() {}

func (*SessionResponse_InitializeSession) isSessionResponse_Response() {}

func (*SessionResponse_GetContentInfo) isSessionResponse_Response() {}

func (*SessionResponse_Flush) isSessionResponse_Response() {}

func (*SessionResponse_WriteContent) isSessionResponse_Response() {}

func (*SessionResponse_GetContent) isSessionResponse_Response() {}

func (*SessionResponse_GetManifest) isSessionResponse_Response() {}

func (*SessionResponse_PutManifest) isSessionResponse_Response() {}

func (*SessionResponse_FindManifests) isSessionResponse_Response() {}

func (*SessionResponse_DeleteManifest) isSessionResponse_Response() {}

func (*SessionResponse_PrefetchContents) isSessionResponse_Response() {}

func (*SessionResponse_ApplyRetentionPolicy) isSessionResponse_Response() {}

func (*SessionResponse_SendNotification) isSessionResponse_Response() {}

var File_repository_server_proto protoreflect.FileDescriptor

const file_repository_server_proto_rawDesc = "" +
	"\n" +
	"\x17repository_server.proto\x12\x10kopia_repository\"\x9c\x02\n" +
	"\vContentInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12#\n" +
	"\rpacked_length\x18\x02 \x01(\rR\fpackedLength\x12+\n" +
	"\x11timestamp_seconds\x18\x03 \x01(\x03R\x10timestampSeconds\x12 \n" +
	"\fpack_blob_id\x18\x04 \x01(\tR\n" +
	"packBlobId\x12\x1f\n" +
	"\vpack_offset\x18\x05 \x01(\rR\n" +
	"packOffset\x12\x18\n" +
	"\adeleted\x18\x06 \x01(\bR\adeleted\x12%\n" +
	"\x0eformat_version\x18\a \x01(\rR\rformatVersion\x12'\n" +
	"\x0foriginal_length\x18\b \x01(\rR\x0eoriginalLength\"\xed\x01\n" +
	"\x15ManifestEntryMetadata\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12$\n" +
	"\x0emod_time_nanos\x18\x02 \x01(\x03R\fmodTimeNanos\x12\x16\n" +
	"\x06length\x18\x03 \x01(\x05R\x06length\x12K\n" +
	"\x06labels\x18\x04 \x03(\v23.kopia_repository.ManifestEntryMetadata.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xfc\x01\n" +
	"\rErrorResponse\x128\n" +
	"\x04code\x18\x01 \x01(\x0e2$.kopia_repository.ErrorResponse.CodeR\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x96\x01\n" +
	"\x04Code\x12\x11\n" +
	"\rUNKNOWN_ERROR\x10\x00\x12\x10\n" +
	"\fCLIENT_ERROR\x10\x01\x12\x15\n" +
	"\x11CONTENT_NOT_FOUND\x10\x02\x12\x16\n" +
	"\x12MANIFEST_NOT_FOUND\x10\x03\x12\x14\n" +
	"\x10OBJECT_NOT_FOUND\x10\x04\x12\x11\n" +
	"\rACCESS_DENIED\x10\x05\x12\x11\n" +
	"\rSTREAM_BROKEN\x10\x06\"\xba\x01\n" +
	"\x14RepositoryParameters\x12#\n" +
	"\rhash_function\x18\x01 \x01(\tR\fhashFunction\x12\x1f\n" +
	"\vhmac_secret\x18\x02 \x01(\fR\n" +
	"hmacSecret\x12\x1a\n" +
	"\bsplitter\x18\x03 \x01(\tR\bsplitter\x12@\n" +
	"\x1csupports_content_compression\x18\x04 \x01(\bR\x1asupportsContentCompression\"Q\n" +
	"\x18InitializeSessionRequest\x12\x18\n" +
	"\apurpose\x18\x01 \x01(\tR\apurpose\x12\x1b\n" +
	"\tread_only\x18\x02 \x01(\bR\breadOnly\"c\n" +
	"\x19InitializeSessionResponse\x12F\n" +
	"\n" +
	"parameters\x18\x01 \x01(\v2&.kopia_repository.RepositoryParametersR\n" +
	"parameters\"6\n" +
	"\x15GetContentInfoRequest\x12\x1d\n" +
	"\n" +
	"content_id\x18\x01 \x01(\tR\tcontentId\"K\n" +
	"\x16GetContentInfoResponse\x121\n" +
	"\x04info\x18\x01 \x01(\v2\x1d.kopia_repository.ContentInfoR\x04info\"2\n" +
	"\x11GetContentRequest\x12\x1d\n" +
	"\n" +
	"content_id\x18\x01 \x01(\tR\tcontentId\"(\n" +
	"\x12GetContentResponse\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\"\x0e\n" +
	"\fFlushRequest\"\x0f\n" +
	"\rFlushResponse\"c\n" +
	"\x13WriteContentRequest\x12\x16\n" +
	"\x06prefix\x18\x01 \x01(\tR\x06prefix\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\x12 \n" +
	"\vcompression\x18\x03 \x01(\rR\vcompression\"5\n" +
	"\x14WriteContentResponse\x12\x1d\n" +
	"\n" +
	"content_id\x18\x01 \x01(\tR\tcontentId\"5\n" +
	"\x12GetManifestRequest\x12\x1f\n" +
	"\vmanifest_id\x18\x01 \x01(\tR\n" +
	"manifestId\"w\n" +
	"\x13GetManifestResponse\x12\x1b\n" +
	"\tjson_data\x18\x01 \x01(\fR\bjsonData\x12C\n" +
	"\bmetadata\x18\x02 \x01(\v2'.kopia_repository.ManifestEntryMetadataR\bmetadata\"\xb6\x01\n" +
	"\x12PutManifestRequest\x12\x1b\n" +
	"\tjson_data\x18\x01 \x01(\fR\bjsonData\x12H\n" +
	"\x06labels\x18\x02 \x03(\v20.kopia_repository.PutManifestRequest.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"6\n" +
	"\x13PutManifestResponse\x12\x1f\n" +
	"\vmanifest_id\x18\x01 \x01(\tR\n" +
	"manifestId\"8\n" +
	"\x15DeleteManifestRequest\x12\x1f\n" +
	"\vmanifest_id\x18\x01 \x01(\tR\n" +
	"manifestId\"\x18\n" +
	"\x16DeleteManifestResponse\"\xba\x01\n" +
	"\x14FindManifestsRequest\x12J\n" +
	"\x06labels\x18\x01 \x03(\v22.kopia_repository.FindManifestsRequest.LabelsEntryR\x06labels\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\\\n" +
	"\x15FindManifestsResponse\x12C\n" +
	"\bmetadata\x18\x01 \x03(\v2'.kopia_repository.ManifestEntryMetadataR\bmetadata\"N\n" +
	"\x17PrefetchContentsRequest\x12\x1f\n" +
	"\vcontent_ids\x18\x01 \x03(\tR\n" +
	"contentIds\x12\x12\n" +
	"\x04hint\x18\x02 \x01(\tR\x04hint\";\n" +
	"\x18PrefetchContentsResponse\x12\x1f\n" +
	"\vcontent_ids\x18\x01 \x03(\tR\n" +
	"contentIds\"c\n" +
	"\x1bApplyRetentionPolicyRequest\x12\x1f\n" +
	"\vsource_path\x18\x01 \x01(\tR\n" +
	"sourcePath\x12#\n" +
	"\rreally_delete\x18\x02 \x01(\bR\freallyDelete\"A\n" +
	"\x1cApplyRetentionPolicyResponse\x12!\n" +
	"\fmanifest_ids\x18\x01 \x03(\tR\vmanifestIds\"\xcd\x01\n" +
	"\x17SendNotificationRequest\x12#\n" +
	"\rtemplate_name\x18\x01 \x01(\tR\ftemplateName\x12\x1d\n" +
	"\n" +
	"event_args\x18\x02 \x01(\fR\teventArgs\x12\x1a\n" +
	"\bseverity\x18\x03 \x01(\x05R\bseverity\x12R\n" +
	"\x0fevent_args_type\x18\x04 \x01(\x0e2*.kopia_repository.NotificationEventArgTypeR\reventArgsType\"\x1a\n" +
	"\x18SendNotificationResponse\"\xaa\t\n" +
	"\x0eSessionRequest\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\x03R\trequestId\x12W\n" +
	"\rtrace_context\x18\x02 \x03(\v22.kopia_repository.SessionRequest.TraceContextEntryR\ftraceContext\x12[\n" +
	"\x12initialize_session\x18\n" +
	" \x01(\v2*.kopia_repository.InitializeSessionRequestH\x00R\x11initializeSession\x12S\n" +
	"\x10get_content_info\x18\v \x01(\v2'.kopia_repository.GetContentInfoRequestH\x00R\x0egetContentInfo\x126\n" +
	"\x05flush\x18\f \x01(\v2\x1e.kopia_repository.FlushRequestH\x00R\x05flush\x12L\n" +
	"\rwrite_content\x18\r \x01(\v2%.kopia_repository.WriteContentRequestH\x00R\fwriteContent\x12F\n" +
	"\vget_content\x18\x0e \x01(\v2#.kopia_repository.GetContentRequestH\x00R\n" +
	"getContent\x12I\n" +
	"\fget_manifest\x18\x0f \x01(\v2$.kopia_repository.GetManifestRequestH\x00R\vgetManifest\x12I\n" +
	"\fput_manifest\x18\x10 \x01(\v2$.kopia_repository.PutManifestRequestH\x00R\vputManifest\x12O\n" +
	"\x0efind_manifests\x18\x11 \x01(\v2&.kopia_repository.FindManifestsRequestH\x00R\rfindManifests\x12R\n" +
	"\x0fdelete_manifest\x18\x12 \x01(\v2'.kopia_repository.DeleteManifestRequestH\x00R\x0edeleteManifest\x12X\n" +
	"\x11prefetch_contents\x18\x13 \x01(\v2).kopia_repository.PrefetchContentsRequestH\x00R\x10prefetchContents\x12e\n" +
	"\x16apply_retention_policy\x18\x14 \x01(\v2-.kopia_repository.ApplyRetentionPolicyRequestH\x00R\x14applyRetentionPolicy\x12X\n" +
	"\x11send_notification\x18\x15 \x01(\v2).kopia_repository.SendNotificationRequestH\x00R\x10sendNotification\x1a?\n" +
	"\x11TraceContextEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\t\n" +
	"\arequest\"\xf2\b\n" +
	"\x0fSessionResponse\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\x03R\trequestId\x12\x19\n" +
	"\bhas_more\x18\x03 \x01(\bR\ahasMore\x127\n" +
	"\x05error\x18\x02 \x01(\v2\x1f.kopia_repository.ErrorResponseH\x00R\x05error\x12\\\n" +
	"\x12initialize_session\x18\n" +
	" \x01(\v2+.kopia_repository.InitializeSessionResponseH\x00R\x11initializeSession\x12T\n" +
	"\x10get_content_info\x18\v \x01(\v2(.kopia_repository.GetContentInfoResponseH\x00R\x0egetContentInfo\x127\n" +
	"\x05flush\x18\f \x01(\v2\x1f.kopia_repository.FlushResponseH\x00R\x05flush\x12M\n" +
	"\rwrite_content\x18\r \x01(\v2&.kopia_repository.WriteContentResponseH\x00R\fwriteContent\x12G\n" +
	"\vget_content\x18\x0e \x01(\v2$.kopia_repository.GetContentResponseH\x00R\n" +
	"getContent\x12J\n" +
	"\fget_manifest\x18\x0f \x01(\v2%.kopia_repository.GetManifestResponseH\x00R\vgetManifest\x12J\n" +
	"\fput_manifest\x18\x10 \x01(\v2%.kopia_repository.PutManifestResponseH\x00R\vputManifest\x12P\n" +
	"\x0efind_manifests\x18\x11 \x01(\v2'.kopia_repository.FindManifestsResponseH\x00R\rfindManifests\x12S\n" +
	"\x0fdelete_manifest\x18\x12 \x01(\v2(.kopia_repository.DeleteManifestResponseH\x00R\x0edeleteManifest\x12Y\n" +
	"\x11prefetch_contents\x18\x13 \x01(\v2*.kopia_repository.PrefetchContentsResponseH\x00R\x10prefetchContents\x12f\n" +
	"\x16apply_retention_policy\x18\x14 \x01(\v2..kopia_repository.ApplyRetentionPolicyResponseH\x00R\x14applyRetentionPolicy\x12Y\n" +
	"\x11send_notification\x18\x15 \x01(\v2*.kopia_repository.SendNotificationResponseH\x00R\x10sendNotificationB\n" +
	"\n" +
	"\bresponse*\x81\x01\n" +
	"\x18NotificationEventArgType\x12\x14\n" +
	"\x10ARG_TYPE_UNKNOWN\x10\x00\x12\x12\n" +
	"\x0eARG_TYPE_EMPTY\x10\x01\x12\x17\n" +
	"\x13ARG_TYPE_ERROR_INFO\x10\x02\x12\"\n" +
	"\x1eARG_TYPE_MULTI_SNAPSHOT_STATUS\x10\x032e\n" +
	"\x0fKopiaRepository\x12R\n" +
	"\aSession\x12 .kopia_repository.SessionRequest\x1a!.kopia_repository.SessionResponse(\x010\x01B)Z'github.com/kopia/kopia/internal/grpcapib\x06proto3"

var (
	file_repository_server_proto_rawDescOnce sync.Once
	file_repository_server_proto_rawDescData []byte
)

func file_repository_server_proto_rawDescGZIP() []byte {
	file_repository_server_proto_rawDescOnce.Do(func() {
		file_repository_server_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_repository_server_proto_rawDesc), len(file_repository_server_proto_rawDesc)))
	})
	return file_repository_server_proto_rawDescData
}

var file_repository_server_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_repository_server_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_repository_server_proto_goTypes = []any{
	(NotificationEventArgType)(0),        // 0: kopia_repository.NotificationEventArgType
	(ErrorResponse_Code)(0),              // 1: kopia_repository.ErrorResponse.Code
	(*ContentInfo)(nil),                  // 2: kopia_repository.ContentInfo
	(*ManifestEntryMetadata)(nil),        // 3: kopia_repository.ManifestEntryMetadata
	(*ErrorResponse)(nil),                // 4: kopia_repository.ErrorResponse
	(*RepositoryParameters)(nil),         // 5: kopia_repository.RepositoryParameters
	(*InitializeSessionRequest)(nil),     // 6: kopia_repository.InitializeSessionRequest
	(*InitializeSessionResponse)(nil),    // 7: kopia_repository.InitializeSessionResponse
	(*GetContentInfoRequest)(nil),        // 8: kopia_repository.GetContentInfoRequest
	(*GetContentInfoResponse)(nil),       // 9: kopia_repository.GetContentInfoResponse
	(*GetContentRequest)(nil),            // 10: kopia_repository.GetContentRequest
	(*GetContentResponse)(nil),           // 11: kopia_repository.GetContentResponse
	(*FlushRequest)(nil),                 // 12: kopia_repository.FlushRequest
	(*FlushResponse)(nil),                // 13: kopia_repository.FlushResponse
	(*WriteContentRequest)(nil),          // 14: kopia_repository.WriteContentRequest
	(*WriteContentResponse)(nil),         // 15: kopia_repository.WriteContentResponse
	(*GetManifestRequest)(nil),           // 16: kopia_repository.GetManifestRequest
	(*GetManifestResponse)(nil),          // 17: kopia_repository.GetManifestResponse
	(*PutManifestRequest)(nil),           // 18: kopia_repository.PutManifestRequest
	(*PutManifestResponse)(nil),          // 19: kopia_repository.PutManifestResponse
	(*DeleteManifestRequest)(nil),        // 20: kopia_repository.DeleteManifestRequest
	(*DeleteManifestResponse)(nil),       // 21: kopia_repository.DeleteManifestResponse
	(*FindManifestsRequest)(nil),         // 22: kopia_repository.FindManifestsRequest
	(*FindManifestsResponse)(nil),        // 23: kopia_repository.FindManifestsResponse
	(*PrefetchContentsRequest)(nil),      // 24: kopia_repository.PrefetchContentsRequest
	(*PrefetchContentsResponse)(nil),     // 25: kopia_repository.PrefetchContentsResponse
	(*ApplyRetentionPolicyRequest)(nil),  // 26: kopia_repository.ApplyRetentionPolicyRequest
	(*ApplyRetentionPolicyResponse)(nil), // 27: kopia_repository.ApplyRetentionPolicyResponse
	(*SendNotificationRequest)(nil),      // 28: kopia_repository.SendNotificationRequest
	(*SendNotificationResponse)(nil),     // 29: kopia_repository.SendNotificationResponse
	(*SessionRequest)(nil),               // 30: kopia_repository.SessionRequest
	(*SessionResponse)(nil),              // 31: kopia_repository.SessionResponse
	nil,                                  // 32: kopia_repository.ManifestEntryMetadata.LabelsEntry
	nil,                                  // 33: kopia_repository.PutManifestRequest.LabelsEntry
	nil,                                  // 34: kopia_repository.FindManifestsRequest.LabelsEntry
	nil,                                  // 35: kopia_repository.SessionRequest.TraceContextEntry
}
var file_repository_server_proto_depIdxs = []int32{
	32, // 0: kopia_repository.ManifestEntryMetadata.labels:type_name -> kopia_repository.ManifestEntryMetadata.LabelsEntry
	1,  // 1: kopia_repository.ErrorResponse.code:type_name -> kopia_repository.ErrorResponse.Code
	5,  // 2: kopia_repository.InitializeSessionResponse.parameters:type_name -> kopia_repository.RepositoryParameters
	2,  // 3: kopia_repository.GetContentInfoResponse.info:type_name -> kopia_repository.ContentInfo
	3,  // 4: kopia_repository.GetManifestResponse.metadata:type_name -> kopia_repository.ManifestEntryMetadata
	33, // 5: kopia_repository.PutManifestRequest.labels:type_name -> kopia_repository.PutManifestRequest.LabelsEntry
	34, // 6: kopia_repository.FindManifestsRequest.labels:type_name -> kopia_repository.FindManifestsRequest.LabelsEntry
	3,  // 7: kopia_repository.FindManifestsResponse.metadata:type_name -> kopia_repository.ManifestEntryMetadata
	0,  // 8: kopia_repository.SendNotificationRequest.event_args_type:type_name -> kopia_repository.NotificationEventArgType
	35, // 9: kopia_repository.SessionRequest.trace_context:type_name -> kopia_repository.SessionRequest.TraceContextEntry
	6,  // 10: kopia_repository.SessionRequest.initialize_session:type_name -> kopia_repository.InitializeSessionRequest
	8,  // 11: kopia_repository.SessionRequest.get_content_info:type_name -> kopia_repository.GetContentInfoRequest
	12, // 12: kopia_repository.SessionRequest.flush:type_name -> kopia_repository.FlushRequest
	14, // 13: kopia_repository.SessionRequest.write_content:type_name -> kopia_repository.WriteContentRequest
	10, // 14: kopia_repository.SessionRequest.get_content:type_name -> kopia_repository.GetContentRequest
	16, // 15: kopia_repository.SessionRequest.get_manifest:type_name -> kopia_repository.GetManifestRequest
	18, // 16: kopia_repository.SessionRequest.put_manifest:type_name -> kopia_repository.PutManifestRequest
	22, // 17: kopia_repository.SessionRequest.find_manifests:type_name -> kopia_repository.FindManifestsRequest
	20, // 18: kopia_repository.SessionRequest.delete_manifest:type_name -> kopia_repository.DeleteManifestRequest
	24, // 19: kopia_repository.SessionRequest.prefetch_contents:type_name -> kopia_repository.PrefetchContentsRequest
	26, // 20: kopia_repository.SessionRequest.apply_retention_policy:type_name -> kopia_repository.ApplyRetentionPolicyRequest
	28, // 21: kopia_repository.SessionRequest.send_notification:type_name -> kopia_repository.SendNotificationRequest
	4,  // 22: kopia_repository.SessionResponse.error:type_name -> kopia_repository.ErrorResponse
	7,  // 23: kopia_repository.SessionResponse.initialize_session:type_name -> kopia_repository.InitializeSessionResponse
	9,  // 24: kopia_repository.SessionResponse.get_content_info:type_name -> kopia_repository.GetContentInfoResponse
	13, // 25: kopia_repository.SessionResponse.flush:type_name -> kopia_repository.FlushResponse
	15, // 26: kopia_repository.SessionResponse.write_content:type_name -> kopia_repository.WriteContentResponse
	11, // 27: kopia_repository.SessionResponse.get_content:type_name -> kopia_repository.GetContentResponse
	17, // 28: kopia_repository.SessionResponse.get_manifest:type_name -> kopia_repository.GetManifestResponse
	19, // 29: kopia_repository.SessionResponse.put_manifest:type_name -> kopia_repository.PutManifestResponse
	23, // 30: kopia_repository.SessionResponse.find_manifests:type_name -> kopia_repository.FindManifestsResponse
	21, // 31: kopia_repository.SessionResponse.delete_manifest:type_name -> kopia_repository.DeleteManifestResponse
	25, // 32: kopia_repository.SessionResponse.prefetch_contents:type_name -> kopia_repository.PrefetchContentsResponse
	27, // 33: kopia_repository.SessionResponse.apply_retention_policy:type_name -> kopia_repository.ApplyRetentionPolicyResponse
	29, // 34: kopia_repository.SessionResponse.send_notification:type_name -> kopia_repository.SendNotificationResponse
	30, // 35: kopia_repository.KopiaRepository.Session:input_type -> kopia_repository.SessionRequest
	31, // 36: kopia_repository.KopiaRepository.Session:output_type -> kopia_repository.SessionResponse
	36, // [36:37] is the sub-list for method output_type
	35, // [35:36] is the sub-list for method input_type
	35, // [35:35] is the sub-list for extension type_name
	35, // [35:35] is the sub-list for extension extendee
	0,  // [0:35] is the sub-list for field type_name
}

func init() { file_repository_server_proto_init() }
func file_repository_server_proto_init() {
	if File_repository_server_proto != nil {
		return
	}
	file_repository_server_proto_msgTypes[28].OneofWrappers = []any{
		(*SessionRequest_InitializeSession)(nil),
		(*SessionRequest_GetContentInfo)(nil),
		(*SessionRequest_Flush)(nil),
		(*SessionRequest_WriteContent)(nil),
		(*SessionRequest_GetContent)(nil),
		(*SessionRequest_GetManifest)(nil),
		(*SessionRequest_PutManifest)(nil),
		(*SessionRequest_FindManifests)(nil),
		(*SessionRequest_DeleteManifest)(nil),
		(*SessionRequest_PrefetchContents)(nil),
		(*SessionRequest_ApplyRetentionPolicy)(nil),
		(*SessionRequest_SendNotification)(nil),
	}
	file_repository_server_proto_msgTypes[29].OneofWrappers = []any{
		(*SessionResponse_Error)(nil),
		(*SessionResponse_InitializeSession)(nil),
		(*SessionResponse_GetContentInfo)(nil),
		(*SessionResponse_Flush)(nil),
		(*SessionResponse_WriteContent)(nil),
		(*SessionResponse_GetContent)(nil),
		(*SessionResponse_GetManifest)(nil),
		(*SessionResponse_PutManifest)(nil),
		(*SessionResponse_FindManifests)(nil),
		(*SessionResponse_DeleteManifest)(nil),
		(*SessionResponse_PrefetchContents)(nil),
		(*SessionResponse_ApplyRetentionPolicy)(nil),
		(*SessionResponse_SendNotification)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_repository_server_proto_rawDesc), len(file_repository_server_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_repository_server_proto_goTypes,
		DependencyIndexes: file_repository_server_proto_depIdxs,
		EnumInfos:         file_repository_server_proto_enumTypes,
		MessageInfos:      file_repository_server_proto_msgTypes,
	}.Build()
	File_repository_server_proto = out.File
	file_repository_server_proto_goTypes = nil
	file_repository_server_proto_depIdxs = nil
}
